{"mappings":"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","sources":["src/components/Sakura/sakura.js"],"sourcesContent":["const Sakura = function (selecteur, options) {\r\nif (typeof selecteur === 'undefined') {\r\nthrow new Error(\"Aucun selecteur specifie. Definissez un element.\");\r\n}this.el = document.querySelector(selecteur);\r\n\r\n// Valeurs par defaut pour l'objet d'options, qui sera etendu ci-dessous.\r\nconst valeursParDefaut = {\r\n    className: 'sakura', // Nom de classe du petale. Correspond au CSS.\r\n    fallSpeed: 2, // Facteur de vitesse de chute du petale (plus eleve est plus lent).\r\n    maxSize: 14, // Taille maximale du petale.\r\n    minSize: 10, // Taille minimale du petale.\r\n    delay: 300, // Delai entre les petales.\r\n    colors: [\r\n        {\r\n            // Vous pouvez ajouter plusieurs couleurs (choisies aleatoirement) en ajoutant des elements au tableau.\r\n            gradientColorStart: 'rgba(1, 157, 142, 0.5)', // Couleur de debut du degrade (rgba).\r\n            gradientColorEnd: 'rgba(1, 157, 142, 0.5)', // Couleur de fin du degrade (rgba).\r\n            gradientColorDegree: 120, // Angle de degre du degrade.\r\n        },\r\n    ],\r\n};\r\n\r\n// Fusionner les valeurs par defaut avec les options de l'utilisateur.\r\nconst etendre = function (objetOriginal, nouvelObjet) {\r\n    Object.keys(objetOriginal).forEach(cle => {\r\n        if (nouvelObjet && Object.prototype.hasOwnProperty.call(nouvelObjet, cle)) {\r\n            const origine = objetOriginal;\r\n            origine[cle] = nouvelObjet[cle];\r\n        }\r\n    });\r\n\r\n    return objetOriginal;\r\n};\r\n\r\nthis.paramètres = etendre(valeursParDefaut, options);\r\n\r\n// Masquer les barres de defilement horizontales sur l'element cible.\r\nthis.el.style.overflowX = 'hidden';\r\n\r\n// element aleatoire d'un tableau\r\nfunction elementAleatoireDuTableau(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\n// Entier aleatoire\r\nfunction entierAleatoire(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n// Verifier les evenements d'animation.\r\nconst prefixes = ['webkit', 'moz', 'MS', 'o', ''];\r\nfunction evenementAvecPrefixe(element, type, rappel) {\r\n    for (let p = 0; p < prefixes.length; p += 1) {\r\n        let typeAnim = type;\r\n\r\n        if (!prefixes[p]) {\r\n            typeAnim = type.toLowerCase();\r\n        }\r\n\r\n        element.addEventListener(prefixes[p] + typeAnim, rappel, false);\r\n    }\r\n}\r\n\r\n// Verifier si l'element est dans la fenêtre d'affichage.\r\nfunction elementDansFenêtreAffichage(el) {\r\n    const rect = el.getBoundingClientRect();\r\n\r\n    return (\r\n        rect.top >= 0 &&\r\n        rect.left >= 0 &&\r\n        rect.bottom <=\r\n            (window.innerHeight || document.documentElement.clientHeight) &&\r\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n}\r\n\r\nthis.creerPetale = () => {\r\n    if (this.el.dataset.sakuraAnimId) {\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(this.creerPetale);\r\n        }, this.paramètres.delay);\r\n    }\r\n\r\n    // Nommer les animations. Elles doivent correspondre aux animations dans le fichier CSS.\r\n    const nomsAnimations = {\r\n        blowAnimations: [\r\n            'blow-soft-left',\r\n            'blow-medium-left',\r\n            'blow-soft-right',\r\n            'blow-medium-right',\r\n        ],\r\n        swayAnimations: [\r\n            'sway-0',\r\n            'sway-1',\r\n            'sway-2',\r\n            'sway-3',\r\n            'sway-4',\r\n            'sway-5',\r\n            'sway-6',\r\n            'sway-7',\r\n            'sway-8',\r\n        ],\r\n    };\r\n\r\n    // Obtenir une animation aleatoire de chaque type et aleatoriser le temps de chute des petales\r\n    const animationSouffle = elementAleatoireDuTableau(nomsAnimations.blowAnimations);\r\n    const animationOscillation = elementAleatoireDuTableau(nomsAnimations.swayAnimations);\r\n    const tempsChute =\r\n        (document.documentElement.clientHeight * 0.007 +\r\n            Math.round(Math.random() * 5)) *\r\n        this.paramètres.fallSpeed;\r\n\r\n    // Creer les animations\r\n    const animationsArr = [\r\n        `fall ${tempsChute}s linear 0s 1`,\r\n        `${animationSouffle} ${(tempsChute > 30 ? tempsChute : 30) -\r\n            20 +\r\n            entierAleatoire(0, 20)}s linear 0s infinite`,\r\n        `${animationOscillation} ${entierAleatoire(2, 4)}s linear 0s infinite`,\r\n    ];\r\n    const animations = animationsArr.join(', ');\r\n\r\n    // Creer le petale et lui donner une taille aleatoire.\r\n    const petale = document.createElement('div');\r\n    petale.classList.add(this.paramètres.className);\r\n    const hauteur = entierAleatoire(this.paramètres.minSize, this.paramètres.maxSize);\r\n    const largeur = hauteur - Math.floor(entierAleatoire(0, this.paramètres.minSize) / 3);\r\n\r\n    // Obtenir une couleur aleatoire.\r\n    const couleur = elementAleatoireDuTableau(this.paramètres.colors);\r\n\r\n    petale.style.background = `linear-gradient(${couleur.gradientColorDegree}deg, ${couleur.gradientColorStart}, ${couleur.gradientColorEnd})`;\r\n    petale.style.webkitAnimation = animations;\r\n    petale.style.animation = animations;\r\n    petale.style.borderRadius = `${entierAleatoire(\r\n        this.paramètres.maxSize,\r\n        this.paramètres.maxSize + Math.floor(Math.random() * 10),\r\n    )}px ${entierAleatoire(1, Math.floor(largeur / 4))}px`;\r\n    petale.style.height = `${hauteur}px`;\r\n    petale.style.left = `${Math.random() * document.documentElement.clientWidth -\r\n        100}px`;\r\n    petale.style.marginTop = `${-(Math.floor(Math.random() * 20) + 15)}px`;\r\n    petale.style.width = `${largeur}px`;\r\n\r\n    // Supprimer les petales dont l'animation est terminee.\r\n    evenementAvecPrefixe(petale, 'AnimationEnd', () => {\r\n        if (!elementDansFenêtreAffichage(petale)) {\r\n            petale.remove();\r\n        }\r\n    });\r\n\r\n    // Supprimer les petales qui sortent de la fenêtre d'affichage.\r\n    evenementAvecPrefixe(petale, 'AnimationIteration', () => {\r\n        if (!elementDansFenêtreAffichage(petale)) {\r\n            petale.remove();\r\n        }\r\n    });\r\n\r\n    // Ajouter le petale à l'element cible.\r\n    this.el.appendChild(petale);\r\n};\r\n\r\nthis.el.setAttribute(\r\n    'data-sakura-anim-id',\r\n    window.requestAnimationFrame(this.creerPetale),\r\n);\r\n};\r\n\r\nSakura.prototype.start = function () {\r\nconst animId = this.el.dataset.sakuraAnimId;\r\nif (!animId) {\r\nthis.el.setAttribute(\r\n'data-sakura-anim-id',\r\nwindow.requestAnimationFrame(this.creerPetale),\r\n);\r\n} else {\r\nthrow new Error('Sakura est dejà en cours d\\'execution.');\r\n}\r\n};\r\n\r\nSakura.prototype.stop = function (doux = false) {\r\nconst animId = this.el.dataset.sakuraAnimId;\r\nif (animId) {\r\nwindow.cancelAnimationFrame(animId);\r\nthis.el.setAttribute('data-sakura-anim-id', '');\r\n}\r\n// Supprimer toutes les fleurs actuelles en une fois.\r\n// Vous pouvez egalement definir 'doux' sur true pour empêcher la creation de nouveaux petales.\r\n// Ainsi, les petales ne seront pas supprimes brusquement.\r\nif (!doux) {\r\n    setTimeout(() => {\r\n        const petales = document.getElementsByClassName(this.paramètres.className);\r\n        while (petales.length > 0) {\r\n            petales[0].parentNode.removeChild(petales[0]);\r\n        }\r\n    }, this.paramètres.delay + 50);\r\n}\r\n};"],"names":[],"version":3,"file":"index.22b6dfd0.js.map","sourceRoot":"/__parcel_source_root/"}
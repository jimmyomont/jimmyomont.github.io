{"mappings":"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","sources":["src/components/Sakura/sakura.js"],"sourcesContent":["const Sakura = function (selecteur, options) {\r\nif (typeof selecteur === 'undefined') {\r\nthrow new Error(\"Aucun selecteur specifie. Definissez un element.\");\r\n}this.el = document.querySelector(selecteur);\r\n\r\n// Valeurs par defaut pour l'objet d'options, qui sera etendu ci-dessous.\r\nconst valeursParDefaut = {\r\n    className: 'sakura', // Nom de classe du petale. Correspond au CSS.\r\n    fallSpeed: 2, // Facteur de vitesse de chute du petale (plus eleve est plus lent).\r\n    maxSize: 14, // Taille maximale du petale.\r\n    minSize: 10, // Taille minimale du petale.\r\n    delay: 300, // Delai entre les petales.\r\n    colors: [\r\n        {\r\n            // Vous pouvez ajouter plusieurs couleurs (choisies aleatoirement) en ajoutant des elements au tableau.\r\n            gradientColorStart: 'rgba(1, 157, 142, 0.5)', // Couleur de debut du degrade (rgba).\r\n            gradientColorEnd: 'rgba(1, 157, 142, 0.5)', // Couleur de fin du degrade (rgba).\r\n            gradientColorDegree: 120, // Angle de degre du degrade.\r\n        },\r\n    ],\r\n};\r\n\r\n// Fusionner les valeurs par defaut avec les options de l'utilisateur.\r\nconst etendre = function (objetOriginal, nouvelObjet) {\r\n    Object.keys(objetOriginal).forEach(cle => {\r\n        if (nouvelObjet && Object.prototype.hasOwnProperty.call(nouvelObjet, cle)) {\r\n            const origine = objetOriginal;\r\n            origine[cle] = nouvelObjet[cle];\r\n        }\r\n    });\r\n\r\n    return objetOriginal;\r\n};\r\n\r\nthis.paramètres = etendre(valeursParDefaut, options);\r\n\r\n// Masquer les barres de defilement horizontales sur l'element cible.\r\nthis.el.style.overflowX = 'hidden';\r\n\r\n// element aleatoire d'un tableau\r\nfunction elementAleatoireDuTableau(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\n// Entier aleatoire\r\nfunction entierAleatoire(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n// Verifier les evenements d'animation.\r\nconst prefixes = ['webkit', 'moz', 'MS', 'o', ''];\r\nfunction evenementAvecPrefixe(element, type, rappel) {\r\n    for (let p = 0; p < prefixes.length; p += 1) {\r\n        let typeAnim = type;\r\n\r\n        if (!prefixes[p]) {\r\n            typeAnim = type.toLowerCase();\r\n        }\r\n\r\n        element.addEventListener(prefixes[p] + typeAnim, rappel, false);\r\n    }\r\n}\r\n\r\n// Verifier si l'element est dans la fenêtre d'affichage.\r\nfunction elementDansFenêtreAffichage(el) {\r\n    const rect = el.getBoundingClientRect();\r\n\r\n    return (\r\n        rect.top >= 0 &&\r\n        rect.left >= 0 &&\r\n        rect.bottom <=\r\n            (window.innerHeight || document.documentElement.clientHeight) &&\r\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n}\r\n\r\nthis.creerPetale = () => {\r\n    if (this.el.dataset.sakuraAnimId) {\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(this.creerPetale);\r\n        }, this.paramètres.delay);\r\n    }\r\n\r\n    // Nommer les animations. Elles doivent correspondre aux animations dans le fichier CSS.\r\n    const nomsAnimations = {\r\n        blowAnimations: [\r\n            'blow-soft-left',\r\n            'blow-medium-left',\r\n            'blow-soft-right',\r\n            'blow-medium-right',\r\n        ],\r\n        swayAnimations: [\r\n            'sway-0',\r\n            'sway-1',\r\n            'sway-2',\r\n            'sway-3',\r\n            'sway-4',\r\n            'sway-5',\r\n            'sway-6',\r\n            'sway-7',\r\n            'sway-8',\r\n        ],\r\n    };\r\n\r\n    // Obtenir une animation aleatoire de chaque type et aleatoriser le temps de chute des petales\r\n    const animationSouffle = elementAleatoireDuTableau(nomsAnimations.blowAnimations);\r\n    const animationOscillation = elementAleatoireDuTableau(nomsAnimations.swayAnimations);\r\n    const tempsChute =\r\n        (document.documentElement.clientHeight * 0.007 +\r\n            Math.round(Math.random() * 5)) *\r\n        this.paramètres.fallSpeed;\r\n\r\n    // Creer les animations\r\n    const animationsArr = [\r\n        `fall ${tempsChute}s linear 0s 1`,\r\n        `${animationSouffle} ${(tempsChute > 30 ? tempsChute : 30) -\r\n            20 +\r\n            entierAleatoire(0, 20)}s linear 0s infinite`,\r\n        `${animationOscillation} ${entierAleatoire(2, 4)}s linear 0s infinite`,\r\n    ];\r\n    const animations = animationsArr.join(', ');\r\n\r\n    // Creer le petale et lui donner une taille aleatoire.\r\n    const petale = document.createElement('div');\r\n    petale.classList.add(this.paramètres.className);\r\n    const hauteur = entierAleatoire(this.paramètres.minSize, this.paramètres.maxSize);\r\n    const largeur = hauteur - Math.floor(entierAleatoire(0, this.paramètres.minSize) / 3);\r\n\r\n    // Obtenir une couleur aleatoire.\r\n    const couleur = elementAleatoireDuTableau(this.paramètres.colors);\r\n\r\n    petale.style.background = `linear-gradient(${couleur.gradientColorDegree}deg, ${couleur.gradientColorStart}, ${couleur.gradientColorEnd})`;\r\n    petale.style.webkitAnimation = animations;\r\n    petale.style.animation = animations;\r\n    petale.style.borderRadius = `${entierAleatoire(\r\n        this.paramètres.maxSize,\r\n        this.paramètres.maxSize + Math.floor(Math.random() * 10),\r\n    )}px ${entierAleatoire(1, Math.floor(largeur / 4))}px`;\r\n    petale.style.height = `${hauteur}px`;\r\n    petale.style.left = `${Math.random() * document.documentElement.clientWidth -\r\n        100}px`;\r\n    petale.style.marginTop = `${-(Math.floor(Math.random() * 20) + 15)}px`;\r\n    petale.style.width = `${largeur}px`;\r\n\r\n    // Supprimer les petales dont l'animation est terminee.\r\n    evenementAvecPrefixe(petale, 'AnimationEnd', () => {\r\n        if (!elementDansFenêtreAffichage(petale)) {\r\n            petale.remove();\r\n        }\r\n    });\r\n\r\n    // Supprimer les petales qui sortent de la fenêtre d'affichage.\r\n    evenementAvecPrefixe(petale, 'AnimationIteration', () => {\r\n        if (!elementDansFenêtreAffichage(petale)) {\r\n            petale.remove();\r\n        }\r\n    });\r\n\r\n    // Ajouter le petale à l'element cible.\r\n    this.el.appendChild(petale);\r\n};\r\n\r\nthis.el.setAttribute(\r\n    'data-sakura-anim-id',\r\n    window.requestAnimationFrame(this.creerPetale),\r\n);\r\n};\r\n\r\nSakura.prototype.start = function () {\r\nconst animId = this.el.dataset.sakuraAnimId;\r\nif (!animId) {\r\nthis.el.setAttribute(\r\n'data-sakura-anim-id',\r\nwindow.requestAnimationFrame(this.creerPetale),\r\n);\r\n} else {\r\nthrow new Error('Sakura est dejà en cours d\\'execution.');\r\n}\r\n};\r\n\r\nSakura.prototype.stop = function (doux = false) {\r\nconst animId = this.el.dataset.sakuraAnimId;\r\nif (animId) {\r\nwindow.cancelAnimationFrame(animId);\r\nthis.el.setAttribute('data-sakura-anim-id', '');\r\n}\r\n// Supprimer toutes les fleurs actuelles en une fois.\r\n// Vous pouvez egalement definir 'doux' sur true pour empêcher la creation de nouveaux petales.\r\n// Ainsi, les petales ne seront pas supprimes brusquement.\r\nif (!doux) {\r\n    setTimeout(() => {\r\n        const petales = document.getElementsByClassName(this.paramètres.className);\r\n        while (petales.length > 0) {\r\n            petales[0].parentNode.removeChild(petales[0]);\r\n        }\r\n    }, this.paramètres.delay + 50);\r\n}\r\n};"],"names":["Sakura","selecteur","options","Error","this","el","document","querySelector","objetOriginal","nouvelObjet","elementAleatoireDuTableau","arr","Math","floor","random","length","entierAleatoire","min","max","className","fallSpeed","maxSize","minSize","delay","colors","gradientColorStart","gradientColorEnd","gradientColorDegree","Object","keys","forEach","cle","prototype","hasOwnProperty","call","style","overflowX","prefixes","evenementAvecPrefixe","element","type","rappel","p","typeAnim","toLowerCase","addEventListener","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","creerPetale","dataset","sakuraAnimId","setTimeout","requestAnimationFrame","nomsAnimations","animationSouffle","animationOscillation","tempsChute","round","animations","join","petale","createElement","classList","add","hauteur","largeur","couleur","background","webkitAnimation","animation","borderRadius","height","marginTop","width","remove","appendChild","setAttribute","start","stop","doux","animId","cancelAnimationFrame","petales","getElementsByClassName","parentNode","removeChild"],"version":3,"file":"index.cab65f4c.js.map"}